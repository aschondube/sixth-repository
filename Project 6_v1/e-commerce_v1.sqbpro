<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/EWF/OneDrive/Documentos/CABerlin/Project 6/Sample-Superstore.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="pragmas browser query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="2507"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainSales"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="122"/><column index="2" value="184"/><column index="3" value="98"/><column index="4" value="76"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Location" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="115"/><column index="2" value="107"/><column index="3" value="153"/><column index="4" value="153"/><column index="5" value="79"/><column index="6" value="130"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Orders" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="149"/><column index="2" value="130"/><column index="3" value="162"/><column index="4" value="162"/><column index="5" value="117"/><column index="6" value="115"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Products" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="168"/><column index="2" value="145"/><column index="3" value="116"/><column index="4" value="129"/><column index="5" value="300"/><column index="6" value="149"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Sales" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="76"/><column index="2" value="84"/><column index="3" value="93"/><column index="4" value="95"/><column index="5" value="90"/><column index="6" value="149"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- What is the category generating the maximum sales revenue?

SELECT DISTINCT p.Category, SUM(s.Sales)
FROM Sales s
JOIN Orders o
ON s.UniqueOrderID = o.UniqueOrderID
JOIN Products p
ON o.UniqueOrderID = p.UniqueOrderID
GROUP BY p.Category
ORDER BY SUM(s.Sales) DESC;

-- What about the profit in this category? 
-- Are they making a loss in any categories?
SELECT DISTINCT p.Category, SUM(s.Profit)
FROM Sales s
JOIN Orders o
ON s.UniqueOrderID = o.UniqueOrderID
JOIN Products p
ON o.UniqueOrderID = p.UniqueOrderID
GROUP BY p.Category
ORDER BY SUM(s.Profit) DESC;

-- What are 5 states generating the maximum and minimum sales revenue?

	-- 5 top states
Select l.State, SUM(s.Sales)
FROM Location l
JOIN Orders o
ON l.PostalCode = o.PostalCode
JOIN Sales s
ON o.UniqueOrderID = s.UniqueOrderID
GROUP BY l.State
ORDER BY SUM(s.Sales) DESC
LIMIT 5;

	-- 5 bottom states

Select l.State, SUM(s.Sales)
FROM Location l
JOIN Orders o
ON l.PostalCode = o.PostalCode
JOIN Sales s
ON o.UniqueOrderID = s.UniqueOrderID
GROUP BY l.State
ORDER BY SUM(s.Sales) ASC
LIMIT 5;

-- What are the 3 products in each product segment with the highest sales?

SELECT p.ProductName, p.Category, SUM(s.Sales)
FROM Products p
JOIN Orders o 
ON p.UniqueOrderID = o.UniqueOrderID
JOIN Sales s
ON o.UniqueOrderID = s.UniqueOrderID
GROUP BY p.Category
ORDER BY SUM(s.Sales) DESC
LIMIT 9;

-- Are they the 3 most profitable products as well?

SELECT p.ProductName, SUM(S.Profit)
FROM Products p 
JOIN Orders o 
ON p.UniqueOrderID = o.UniqueOrderID
JOIN Sales s
ON o.UniqueOrderID = s.UniqueOrderID
GROUP BY p.ProductName
ORDER BY SUM(S.Profit) DESC
LIMIT 3;

-- What are the 3 best-seller products in each product segment? (Quantity-wise)

Select p.ProductName, p.Category, SUM(s.Quantity)
FROM Products p
JOIN Orders o
ON p.UniqueOrderID = o.UniqueOrderID
JOIN Sales s
ON o.UniqueOrderID = s.UniqueOrderID
GROUP BY p.Category
ORDER BY SUM(s.Quantity) DESC
LIMIT 3;

-- What are the top 3 worst-selling products in every category? (Quantity-wise)

Select p.ProductName, p.Category, SUM(s.Quantity)
FROM Products p
JOIN Orders o
ON p.UniqueOrderID = o.UniqueOrderID
JOIN Sales s
ON o.UniqueOrderID = s.UniqueOrderID
GROUP BY p.Category
ORDER BY SUM(s.Quantity) ASC
LIMIT 3;

-- How many unique customers per month are there for the year 2016. (There's a catch here: contrary to other 'heavier' RDBMS, SQLite does not support the functions YEAR() or MONTH() to extract the year or the month in a date. You will have to create two new columns: year and month.)

SELECT COUNT(c.CustomerName)
FROM Customers c
JOIN Sales s
ON c.SaleID = s.SaleID
JOIN Orders o
ON s.UniqueOrderID = o.UniqueOrderID
WHERE o.OrderDate LIKE '2016%';</sql><current_tab id="0"/></tab_sql></sqlb_project>
